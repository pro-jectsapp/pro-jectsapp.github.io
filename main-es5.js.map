{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/app.component.ts","webpack:///src/app/views/app/app.component.html","webpack:///src/app/views/card/card.component.html","webpack:///src/app/components/card.component.ts","webpack:///src/app/components/login.component.ts","webpack:///src/app/views/login/login.component.html","webpack:///src/app/components/project-view.component.ts","webpack:///src/app/views/project-view/project-view.component.html","webpack:///src/app/components/projects-list.component.ts","webpack:///src/app/views/projects-list/projects-list.component.html","webpack:///src/app/core/services/auth.service.ts","webpack:///src/app/core/services/github.service.ts","webpack:///src/app/core/services/project.service.ts","webpack:///src/app/core/utils/markdown-parse.pipe.ts","webpack:///src/app/core/utils/safe-html.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppModule","declarations","providers","bootstrap","AppComponent","githubService","projectService","authService","route","queryParams","subscribe","map","length","a","get","res","data","access_token","setUser","window","location","href","splitComponent","setVisibleAreaSizes","logoutUser","selector","templateUrl","styleUrls","Direction","CardComponent","moveUp","moveDown","isEditing","isBusy","editorOptions","theme","language","automaticLayout","editorContent","direction","Up","emit","Down","card","note","saveCard","refreshColumnCards","column","encapsulation","None","LoginComponent","keystrokesHistory","key","token","prompt","clientId","login","Array","prototype","move","from","to","splice","ViewMode","ProjectViewComponent","columnSelected","viewMode","Switch","projectChanged","selectedColumn","undefined","pos","oldPos","currentColumn","currentProject","columns","cards","positionFormatted","moveCard","confirm","deleteCard","mode","name","createColumn","refreshProjectColumns","joke","random","createCard","document","querySelector","scroll","top","behavior","setTimeout","firstCard","startEditing","deleteColumn","ProjectsListComponent","userProjects","orgProjects","getProjects","getUserProjects","projects","projectId","setCurrentProject","AuthService","loggedIn","loggedOut","localStorage","setItem","getItem","removeItem","providedIn","GithubService","isLoggedIn","octokit","auth","getUser","userAgent","ghUser","users","getAuthenticated","checkUser","listForUser","username","allProjects","find","project_id","listColumns","headers","columnId","listCards","column_id","cardId","card_id","position","updateCard","ProjectService","getProject","getProjectColumns","col","getColumnCards","MarkdownParsePipe","value","SafeHtmlPipe","sanitizer","html","bypassSecurityTrustHtml","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { AngularSplitModule } from 'angular-split';\nimport { MonacoEditorModule } from 'ngx-monaco-editor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './components/app.component';\nimport { ProjectsListComponent } from './components/projects-list.component';\nimport { GithubService } from './core/services/github.service';\nimport { ProjectService } from './core/services/project.service';\nimport { ProjectViewComponent } from './components/project-view.component';\nimport { MarkdownParsePipe } from './core/utils/markdown-parse.pipe';\nimport { SafeHtmlPipe } from './core/utils/safe-html.pipe';\nimport { CardComponent } from './components/card.component';\nimport { AuthService } from './core/services/auth.service';\nimport { LoginComponent } from './components/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectsListComponent,\n    ProjectViewComponent,\n    MarkdownParsePipe,\n    SafeHtmlPipe,\n    CardComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularSplitModule.forRoot(),\n    BrowserAnimationsModule,\n    MatIconModule,\n    MonacoEditorModule.forRoot(),\n    FormsModule,\n    MatProgressSpinnerModule,\n  ],\n  providers: [AuthService, GithubService, ProjectService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GithubService } from '../core/services/github.service';\nimport { ProjectService } from '../core/services/project.service';\nimport { SplitComponent } from 'angular-split';\nimport { AuthService } from '../core/services/auth.service';\nimport axios from 'axios';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: '../views/app/app.component.html',\n  styleUrls: ['../views/app/app.component.styl'],\n})\nexport class AppComponent implements OnInit {\n  @ViewChild(SplitComponent) splitComponent: SplitComponent;\n\n  constructor(\n    public githubService: GithubService,\n    public projectService: ProjectService,\n    public authService: AuthService,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(map => {\n      if (map.code && map.code.length === 20) {\n        axios.get(`https://pro-jects.now.sh/api/authorize?code=${map.code}`).then(res => {\n          if (res.data.access_token) {\n            this.authService.setUser(res.data.access_token);\n\n            window.location.href = '/';\n          }\n        });\n      }\n    });\n  }\n\n  onColumnSelected(): void {\n    this.splitComponent.setVisibleAreaSizes([0, 100]);\n  }\n\n  logout(): void {\n    this.authService.logoutUser();\n  }\n}\n","<div class=\"wrapper\">\n  <nav class=\"nav\">\n    <div class=\"nav-block\"></div>\n    <div class=\"nav-block\">\n      <img\n        src=\"/assets/images/GitHub-Mark-Light-64px.png\"\n        alt=\"GitHub Mark\"\n        class=\"nav-block__image\"\n        style=\"margin: 0 5px;\"\n      />\n      <h3 class=\"nav-block__heading\">(pro)jects</h3>\n    </div>\n    <div class=\"nav-block\">\n      <details *ngIf=\"authService.isLoggedIn()\" class=\"user-details__wrapper\">\n        <summary class=\"user-details__summary\">\n          <img\n            src=\"{{ githubService.ghUser.avatar_url }}\"\n            *ngIf=\"githubService.ghUser\"\n            class=\"nav-block__image nav-block__image--rounded\"\n          />\n          <mat-icon>arrow_drop_down</mat-icon>\n        </summary>\n        <div class=\"user-details\">\n          <p>\n            Signed in as <b>{{ githubService.ghUser ? githubService.ghUser.login : '...' }}</b>\n          </p>\n          <ul class=\"user-details__list\">\n            <li (click)=\"logout()\">Log out</li>\n          </ul>\n        </div>\n      </details>\n    </div>\n  </nav>\n  <div class=\"app\" *ngIf=\"authService.isLoggedIn(); else loginScreen\">\n    <as-split unit=\"percent\" direction=\"horizontal\" useTransition=\"true\">\n      <as-split-area size=\"25\">\n        <app-projects-list></app-projects-list>\n      </as-split-area>\n      <as-split-area size=\"75\" minSize=\"50\">\n        <app-project-view (columnSelected)=\"onColumnSelected()\"></app-project-view>\n      </as-split-area>\n    </as-split>\n  </div>\n  <ng-template #loginScreen>\n    <app-login style=\"flex: 1; overflow: hidden;\"></app-login>\n  </ng-template>\n  <div class=\"bar\">\n    <div>\n      Project:\n      <b>{{\n        projectService.currentProject\n          ? projectService.currentProject.name\n          : \"You haven't selected any project yet\"\n      }}</b>\n    </div>\n    <div></div>\n    <div style=\"text-align: right;\">\n      <ng-container *ngIf=\"authService.isLoggedIn(); else notLoggedInMessage\">\n        Authenticated as <b>{{ githubService.ghUser ? githubService.ghUser.login : '...' }}</b>\n      </ng-container>\n      <ng-template #notLoggedInMessage>\n        Not logged in\n      </ng-template>\n    </div>\n  </div>\n</div>\n","<div class=\"card\">\n  <div class=\"card__bar\">\n    <ng-container *ngIf=\"!isEditing; else editorButtons\">\n      <div>\n        <mat-icon class=\"card__bar__icon\" (click)=\"onMove(0)\">arrow_upward</mat-icon>\n        <mat-icon class=\"card__bar__icon\" (click)=\"onMove(1)\">arrow_downward</mat-icon>\n      </div>\n      <div>\n        <mat-icon class=\"card__bar__icon\" (click)=\"onDelete()\">delete</mat-icon>\n        <mat-icon class=\"card__bar__icon\" (click)=\"startEditing()\">create</mat-icon>\n      </div>\n    </ng-container>\n    <ng-template #editorButtons>\n      <div>\n        <mat-icon class=\"card__bar__icon icon__save card__bar__icon--big\" (click)=\"saveCard()\"\n          >save</mat-icon\n        >\n      </div>\n      <div>\n        <mat-spinner diameter=\"20\" *ngIf=\"isBusy\"></mat-spinner>\n      </div>\n      <div>\n        <mat-icon\n          class=\"card__bar__icon icon__done card__bar__icon--big\"\n          (click)=\"saveCardAndCloseEditor()\"\n          >done</mat-icon\n        >\n        <mat-icon class=\"card__bar__icon icon__close card__bar__icon--big\" (click)=\"closeEditor()\"\n          >close</mat-icon\n        >\n      </div>\n    </ng-template>\n  </div>\n  <div\n    class=\"card__content\"\n    [innerHTML]=\"card.note | markdownParse | safeHtml\"\n    *ngIf=\"!isEditing; else editor\"\n  ></div>\n  <ng-template #editor>\n    <div class=\"card__editor\">\n      <ngx-monaco-editor\n        [options]=\"editorOptions\"\n        [(ngModel)]=\"editorContent\"\n        style=\"height: 100%;\"\n      ></ngx-monaco-editor>\n    </div>\n  </ng-template>\n</div>\n","import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { GithubService } from '../core/services/github.service';\nimport { ProjectService } from '../core/services/project.service';\n\nenum Direction {\n  Up,\n  Down,\n}\n\n@Component({\n  selector: 'app-card',\n  templateUrl: '../views/card/card.component.html',\n  styleUrls: ['../views/card/card.component.styl'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CardComponent {\n  @Input() card: any;\n  @Input() column: any;\n  @Output() moveUp = new EventEmitter();\n  @Output() moveDown = new EventEmitter();\n  @Output() delete = new EventEmitter();\n  isEditing = false;\n  isBusy = false;\n\n  editorOptions = { theme: 'vs-dark', language: 'markdown', automaticLayout: true };\n  editorContent = '';\n\n  constructor(private githubService: GithubService, private projectService: ProjectService) {}\n\n  onMove(direction: Direction) {\n    if (direction === Direction.Up) {\n      this.moveUp.emit();\n    } else if (direction === Direction.Down) {\n      this.moveDown.emit();\n    }\n  }\n\n  startEditing() {\n    this.isEditing = true;\n    this.editorContent = this.card.note;\n  }\n\n  async saveCard(): Promise<void> {\n    this.isBusy = true;\n    await this.githubService.saveCard(this.card.id, this.editorContent);\n    this.isBusy = false;\n  }\n\n  async closeEditor() {\n    this.isBusy = true;\n    await this.projectService.refreshColumnCards(this.column);\n    this.editorContent = '';\n    this.isEditing = false;\n    this.isBusy = false;\n  }\n\n  async saveCardAndCloseEditor() {\n    this.isBusy = true;\n    await this.githubService.saveCard(this.card.id, this.editorContent);\n    await this.projectService.refreshColumnCards(this.column);\n    this.editorContent = '';\n    this.isEditing = false;\n    this.isBusy = false;\n  }\n\n  onDelete() {\n    this.delete.emit();\n  }\n}\n","import { Component, HostListener } from '@angular/core';\nimport { AuthService } from '../core/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: '../views/login/login.component.html',\n  styleUrls: ['../views/login/login.component.styl'],\n})\nexport class LoginComponent {\n  private keystrokesHistory = '';\n\n  constructor(private authService: AuthService) {}\n\n  @HostListener('document:keydown', ['$event'])\n  onKeyDown(e) {\n    this.keystrokesHistory += e.key;\n\n    if (this.keystrokesHistory === 'dev') {\n      const token = prompt(\n        'Entered dev mode. Now you can enter the access token manually, without using oauth',\n      );\n      if (token) {\n        this.authService.setUser(token);\n      }\n      this.keystrokesHistory = '';\n    }\n  }\n\n  login() {\n    const clientId = '435bb3ee9ba9d983cb60';\n    window.location.href = `https://github.com/login/oauth/authorize?scope=repo%20write%3Aorg%20user&client_id=${clientId}`;\n  }\n}\n","<div class=\"login\">\n  <h1>(pro)jects</h1>\n  <p>A better UI for GitHub Projects 📟</p>\n  <button class=\"login__button\" (click)=\"login()\">\n    Sign in with GitHub <img src=\"/assets/images/GitHub-Mark-Light-32px.png\" />\n  </button>\n</div>\n","import {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport devpun from 'devpun';\nimport { ProjectService } from '../core/services/project.service';\nimport { GithubService } from '../core/services/github.service';\nimport { CardComponent } from './card.component';\n\n// @ts-ignore\nArray.prototype.move = function (from, to) {\n  this.splice(to, 0, this.splice(from, 1)[0]);\n};\n\nenum ViewMode {\n  Switch,\n  Columns,\n}\n\n@Component({\n  selector: 'app-project-view',\n  templateUrl: '../views/project-view/project-view.component.html',\n  styleUrls: ['../views/project-view/project-view.component.styl'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ProjectViewComponent implements OnInit {\n  @Output() columnSelected = new EventEmitter();\n  selectedColumn: number;\n  viewMode: ViewMode = ViewMode.Switch;\n\n  @ViewChild(CardComponent) firstCard: CardComponent;\n\n  constructor(public projectService: ProjectService, private githubService: GithubService) {}\n\n  ngOnInit(): void {\n    this.projectService.projectChanged.subscribe(() => {\n      this.selectedColumn = undefined;\n    });\n  }\n\n  onColumnClicked(column): void {\n    if (this.selectedColumn === undefined) {\n      this.columnSelected.emit();\n    }\n    this.selectedColumn = column;\n  }\n\n  moveCard(card, pos, oldPos): void {\n    const currentColumn = this.projectService.currentProject.columns[this.selectedColumn];\n    if (pos >= 0 && pos < currentColumn.cards.length) {\n      let positionFormatted;\n      switch (true) {\n        case pos === 0:\n          positionFormatted = 'top';\n          break;\n        case pos === currentColumn.cards.length - 1:\n          positionFormatted = 'bottom';\n          break;\n        default:\n          if (currentColumn.cards[pos - 1].id === card.id) {\n            positionFormatted = `after:${currentColumn.cards[pos].id}`;\n          } else {\n            positionFormatted = `after:${currentColumn.cards[pos - 1].id}`;\n          }\n      }\n\n      this.githubService.moveCard(card.id, positionFormatted);\n      this.projectService.currentProject.columns[this.selectedColumn].cards.move(oldPos, pos);\n    }\n  }\n\n  deleteCard(card, pos): void {\n    if (confirm('Are you sure to delete this card?')) {\n      this.projectService.currentProject.columns[this.selectedColumn].cards.splice(pos, 1);\n      this.githubService.deleteCard(card.id);\n    }\n  }\n\n  setViewMode(mode) {\n    if (mode !== this.viewMode) {\n      this.viewMode = mode;\n    }\n  }\n\n  addColumn() {\n    const name = prompt('Give title for the column');\n    if (name && name !== '') {\n      this.githubService.createColumn(this.projectService.currentProject.id, name).then(() => {\n        this.projectService.refreshProjectColumns();\n      });\n    }\n  }\n\n  addCard() {\n    const joke = devpun.random();\n    this.githubService\n      .createCard(this.projectService.currentProject.columns[this.selectedColumn].id, joke)\n      .then(() => {\n        this.projectService.refreshColumnCards(this.selectedColumn).then(() => {\n          document.querySelector('.cards-view').scroll({ top: 0, behavior: 'smooth' });\n\n          // Ridiculous monkey patch. Don't do this at home, kids\n          setTimeout(() => {\n            this.firstCard.startEditing();\n          }, 0);\n        });\n      });\n  }\n\n  deleteColumn(column, pos) {\n    if (confirm('Are you sure to delete this column?')) {\n      this.projectService.currentProject.columns.splice(pos, 1);\n      this.githubService.deleteColumn(column.id);\n    }\n  }\n}\n","<div class=\"project-view__wrapper\" *ngIf=\"projectService.currentProject; else noProjectBlock\">\n  <div class=\"project-view-bar\">\n    <mat-icon\n      class=\"project-view-bar__icon\"\n      [class]=\"viewMode === 0 ? 'project-view-bar__icon--active' : ''\"\n      (click)=\"setViewMode(0)\"\n      style=\"transform: scale(1.25);\"\n      title=\"Column Switch View\"\n      >vertical_split</mat-icon\n    >\n    <mat-icon\n      class=\"project-view-bar__icon\"\n      (click)=\"setViewMode(1)\"\n      [class]=\"viewMode === 1 ? 'project-view-bar__icon--active' : ''\"\n      title=\"Column View\"\n      >dashboard</mat-icon\n    >\n  </div>\n  <div class=\"project-view\">\n    <div class=\"columns-list__wrapper\">\n      <div class=\"columns-list__header\">\n        <span>Column</span>\n        <mat-icon\n          style=\"\n            width: 12px;\n            height: 12px;\n            font-size: 12px;\n            transform: scale(1.25);\n            cursor: pointer;\n          \"\n          (click)=\"addColumn()\"\n          >add</mat-icon\n        >\n      </div>\n      <ul class=\"columns-list\">\n        <li\n          *ngFor=\"let column of this.projectService.currentProject.columns; index as i\"\n          class=\"columns-list__item__wrapper\"\n          [class]=\"\n            selectedColumn !== undefined\n              ? this.projectService.currentProject.columns[selectedColumn].id === column.id\n                ? 'columns-list__item__wrapper--selected'\n                : ''\n              : ''\n          \"\n        >\n          <div (click)=\"onColumnClicked(i)\" class=\"columns-list__item\">\n            {{ column.name }}\n          </div>\n          <span class=\"delete-button\" (click)=\"deleteColumn(column, i)\">delete</span>\n        </li>\n      </ul>\n    </div>\n    <div class=\"cards-view cards-view--switch-view\" *ngIf=\"selectedColumn !== undefined\">\n      <app-card\n        *ngFor=\"\n          let card of this.projectService.currentProject.columns[selectedColumn].cards;\n          index as i\n        \"\n        (moveUp)=\"moveCard(card, i - 1, i)\"\n        (moveDown)=\"moveCard(card, i + 1, i)\"\n        (delete)=\"deleteCard(card, i)\"\n        [card]=\"card\"\n        [column]=\"selectedColumn\"\n      >\n      </app-card>\n      <button class=\"cards-view__add-button\" (click)=\"addCard()\">Add a new card</button>\n    </div>\n  </div>\n</div>\n<ng-template #noProjectBlock>\n  <div class=\"no-project\">\n    No project selected\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { GithubService } from '../core/services/github.service';\nimport { ProjectService } from '../core/services/project.service';\n\n@Component({\n  selector: 'app-projects-list',\n  templateUrl: '../views/projects-list/projects-list.component.html',\n  styleUrls: ['../views/projects-list/projects-list.component.styl'],\n})\nexport class ProjectsListComponent implements OnInit {\n  userProjects: any[] = [];\n  orgProjects: any[] = [];\n\n  constructor(private githubService: GithubService, private projectService: ProjectService) {}\n\n  ngOnInit(): void {\n    this.getProjects();\n  }\n\n  getProjects(): void {\n    this.githubService.getUserProjects().then((projects) => {\n      this.userProjects = projects;\n    });\n  }\n\n  onProjectClicked(projectId): void {\n    this.projectService.setCurrentProject(projectId);\n  }\n}\n","<div class=\"projects-list__wrapper\">\n  <h3>User's projects</h3>\n  <div class=\"projects-list__empty-caption\" *ngIf=\"!userProjects.length\">\n    You haven't created projects associated to your account\n  </div>\n  <ul class=\"projects-list\">\n    <li class=\"projects-list__item\" *ngFor=\"let project of userProjects\">\n      <span (click)=\"onProjectClicked(project.id)\">{{ project.name }}</span>\n    </li>\n  </ul>\n</div>\n","import { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  public loggedIn = new EventEmitter();\n  public loggedOut = new EventEmitter();\n\n  constructor() {}\n\n  setUser(token): void {\n    window.localStorage.setItem('githubToken', token);\n    this.loggedIn.emit();\n  }\n\n  getUser(): string {\n    return window.localStorage.getItem('githubToken');\n  }\n\n  logoutUser(): void {\n    window.localStorage.removeItem('githubToken');\n    this.loggedOut.emit();\n  }\n\n  isLoggedIn(): boolean {\n    return !!window.localStorage.getItem('githubToken');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Octokit } from '@octokit/rest';\n\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GithubService {\n  private octokit: Octokit;\n  private allProjects: any[];\n  ghUser: any;\n\n  constructor(private authService: AuthService) {\n    if (authService.isLoggedIn()) {\n      this.octokit = new Octokit({ auth: authService.getUser(), userAgent: '(pro)jects v.0.1.0' });\n    }\n\n    this.authService.loggedIn.subscribe(() => {\n      if (this.authService.isLoggedIn()) {\n        this.octokit = new Octokit({\n          auth: authService.getUser(),\n          userAgent: '(pro)jects v.0.1.0',\n        });\n      }\n    });\n\n    this.authService.loggedOut.subscribe(() => {\n      if (!this.authService.isLoggedIn()) {\n        this.octokit = undefined;\n      }\n    });\n  }\n\n  async checkUser(): Promise<boolean> {\n    if (this.octokit) {\n      if (this.ghUser) {\n        return true;\n      } else {\n        let res;\n        try {\n          res = await this.octokit.users.getAuthenticated();\n        } catch (err) {\n          this.authService.logoutUser();\n          return false;\n        }\n        this.ghUser = res.data;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  async getUserProjects(): Promise<any> {\n    if (await this.checkUser()) {\n      const projects = await this.octokit.projects.listForUser({ username: this.ghUser.login });\n      this.allProjects = projects.data;\n      return projects.data;\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async getProject(projectId: number): Promise<any> {\n    if (await this.checkUser()) {\n      return (\n        this.allProjects.find(data => data.id === projectId) ||\n        (await this.octokit.projects.get({ project_id: projectId })).data\n      );\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async getProjectColumns(projectId: number): Promise<any> {\n    if (await this.checkUser()) {\n      return (\n        await this.octokit.projects.listColumns({\n          project_id: projectId,\n          headers: {\n            'If-None-Match': '',\n          },\n        })\n      ).data;\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async getColumnCards(columnId: number): Promise<any> {\n    if (await this.checkUser()) {\n      return (\n        await this.octokit.projects.listCards({\n          column_id: columnId,\n          headers: {\n            'If-None-Match': '',\n          },\n        })\n      ).data;\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async moveCard(cardId, pos): Promise<void> {\n    if (await this.checkUser()) {\n      await this.octokit.projects.moveCard({ card_id: cardId, position: pos });\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async saveCard(cardId, note): Promise<void> {\n    if (await this.checkUser()) {\n      await this.octokit.projects.updateCard({ card_id: cardId, note });\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async deleteCard(cardId): Promise<void> {\n    if (await this.checkUser()) {\n      await this.octokit.projects.deleteCard({ card_id: cardId });\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async createColumn(projectId, name): Promise<void> {\n    if (await this.checkUser()) {\n      await this.octokit.projects.createColumn({ project_id: projectId, name });\n    }\n  }\n\n  async createCard(columnId, note): Promise<void> {\n    if (await this.checkUser()) {\n      await this.octokit.projects.createCard({ column_id: columnId, note });\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async deleteColumn(columnId): Promise<void> {\n    if (await this.checkUser()) {\n      await this.octokit.projects.deleteColumn({ column_id: columnId });\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { GithubService } from './github.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  currentProject: any;\n  projectChanged: EventEmitter<any> = new EventEmitter();\n\n  constructor(private githubService: GithubService) {}\n\n  async setCurrentProject(projectId: number): Promise<void> {\n    this.currentProject = await this.githubService.getProject(projectId);\n    this.currentProject.columns = await this.githubService.getProjectColumns(projectId);\n\n    this.projectChanged.emit(this.currentProject);\n\n    for (const col of this.currentProject.columns) {\n      col.cards = await this.githubService.getColumnCards(col.id);\n    }\n  }\n\n  async refreshProjectColumns(): Promise<void> {\n    this.currentProject.columns = await this.githubService.getProjectColumns(\n      this.currentProject.id,\n    );\n    for (const col of this.currentProject.columns) {\n      col.cards = await this.githubService.getColumnCards(col.id);\n    }\n  }\n\n  async refreshProjectCards(): Promise<void> {\n    for (const col of this.currentProject.columns) {\n      col.cards = await this.githubService.getColumnCards(col.id);\n    }\n  }\n\n  async refreshColumnCards(col): Promise<void> {\n    this.currentProject.columns[col].cards = await this.githubService.getColumnCards(\n      this.currentProject.columns[col].id,\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport marked from 'marked';\n\n@Pipe({\n  name: 'markdownParse',\n})\nexport class MarkdownParsePipe implements PipeTransform {\n  transform(value: string, ...args: any[]): string {\n    return marked(value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml',\n})\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  transform(html) {\n    return this.sanitizer.bypassSecurityTrustHtml(html);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}