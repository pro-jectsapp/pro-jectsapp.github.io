{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/components/app.component.ts","./src/app/views/app/app.component.html","./src/app/components/card.component.ts","./src/app/views/card/card.component.html","./src/app/components/login.component.ts","./src/app/views/login/login.component.html","./src/app/components/project-view.component.ts","./src/app/views/project-view/project-view.component.html","./src/app/components/projects-list.component.ts","./src/app/views/projects-list/projects-list.component.html","./src/app/core/services/auth.service.ts","./src/app/core/services/fav.service.ts","./src/app/core/services/github.service.ts","./src/app/core/services/project.service.ts","./src/app/core/utils/markdown-parse.pipe.ts","./src/app/core/utils/safe-html.pipe.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { AngularSplitModule } from 'angular-split';\nimport { MonacoEditorModule } from 'ngx-monaco-editor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './components/app.component';\nimport { ProjectsListComponent } from './components/projects-list.component';\nimport { GithubService } from './core/services/github.service';\nimport { ProjectService } from './core/services/project.service';\nimport { ProjectViewComponent } from './components/project-view.component';\nimport { MarkdownParsePipe } from './core/utils/markdown-parse.pipe';\nimport { SafeHtmlPipe } from './core/utils/safe-html.pipe';\nimport { CardComponent } from './components/card.component';\nimport { AuthService } from './core/services/auth.service';\nimport { LoginComponent } from './components/login.component';\nimport { FavService } from './core/services/fav.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectsListComponent,\n    ProjectViewComponent,\n    MarkdownParsePipe,\n    SafeHtmlPipe,\n    CardComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularSplitModule.forRoot(),\n    BrowserAnimationsModule,\n    MatIconModule,\n    MonacoEditorModule.forRoot(),\n    FormsModule,\n    MatProgressSpinnerModule,\n  ],\n  providers: [AuthService, GithubService, ProjectService, FavService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GithubService } from '../core/services/github.service';\nimport { ProjectService } from '../core/services/project.service';\nimport { SplitComponent } from 'angular-split';\nimport { AuthService } from '../core/services/auth.service';\nimport axios from 'axios';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: '../views/app/app.component.html',\n  styleUrls: ['../views/app/app.component.styl'],\n})\nexport class AppComponent implements OnInit {\n  @ViewChild(SplitComponent) splitComponent: SplitComponent;\n\n  constructor(\n    public githubService: GithubService,\n    public projectService: ProjectService,\n    public authService: AuthService,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(map => {\n      if (map.code && map.code.length === 20) {\n        axios.get(`https://pro-jects.now.sh/api/authorize?code=${map.code}`).then(res => {\n          if (res.data.access_token) {\n            this.authService.setUser(res.data.access_token);\n\n            window.location.href = '/';\n          }\n        });\n      }\n    });\n  }\n\n  onColumnSelected(): void {\n    this.splitComponent.setVisibleAreaSizes([0, 100]);\n  }\n\n  logout(): void {\n    this.authService.logoutUser();\n  }\n}\n","<div class=\"wrapper\">\n  <nav class=\"nav\">\n    <div class=\"nav-block\"></div>\n    <div class=\"nav-block\">\n      <img\n        src=\"/assets/images/GitHub-Mark-Light-64px.png\"\n        alt=\"GitHub Mark\"\n        class=\"nav-block__image\"\n        style=\"margin: 0 5px;\"\n      />\n      <h3 class=\"nav-block__heading\">(pro)jects</h3>\n    </div>\n    <div class=\"nav-block\">\n      <details *ngIf=\"authService.isLoggedIn()\" class=\"user-details__wrapper\">\n        <summary class=\"user-details__summary\">\n          <img\n            src=\"{{ githubService.ghUser.avatar_url }}\"\n            *ngIf=\"githubService.ghUser\"\n            class=\"nav-block__image nav-block__image--rounded\"\n          />\n          <mat-icon>arrow_drop_down</mat-icon>\n        </summary>\n        <div class=\"user-details\">\n          <p>\n            Signed in as <b>{{ githubService.ghUser ? githubService.ghUser.login : '...' }}</b>\n          </p>\n          <ul class=\"user-details__list\">\n            <li (click)=\"logout()\">Log out</li>\n          </ul>\n        </div>\n      </details>\n    </div>\n  </nav>\n  <div class=\"app\" *ngIf=\"authService.isLoggedIn(); else loginScreen\">\n    <as-split unit=\"percent\" direction=\"horizontal\" useTransition=\"true\">\n      <as-split-area size=\"25\">\n        <app-projects-list></app-projects-list>\n      </as-split-area>\n      <as-split-area size=\"75\" minSize=\"50\">\n        <app-project-view (columnSelected)=\"onColumnSelected()\"></app-project-view>\n      </as-split-area>\n    </as-split>\n  </div>\n  <ng-template #loginScreen>\n    <app-login style=\"flex: 1; overflow: hidden;\"></app-login>\n  </ng-template>\n  <div class=\"bar\">\n    <div>\n      Project:\n      <b>{{\n        projectService.currentProject\n          ? projectService.currentProject.name\n          : \"You haven't selected any project yet\"\n      }}</b>\n    </div>\n    <div></div>\n    <div style=\"text-align: right;\">\n      <ng-container *ngIf=\"authService.isLoggedIn(); else notLoggedInMessage\">\n        Authenticated as <b>{{ githubService.ghUser ? githubService.ghUser.login : '...' }}</b>\n      </ng-container>\n      <ng-template #notLoggedInMessage>\n        Not logged in\n      </ng-template>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { GithubService } from '../core/services/github.service';\nimport { ProjectService } from '../core/services/project.service';\n\nenum Direction {\n  Up,\n  Down,\n}\n\n@Component({\n  selector: 'app-card',\n  templateUrl: '../views/card/card.component.html',\n  styleUrls: ['../views/card/card.component.styl'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CardComponent {\n  @Input() card: any;\n  @Input() column: any;\n  @Output() moveUp = new EventEmitter();\n  @Output() moveDown = new EventEmitter();\n  @Output() delete = new EventEmitter();\n  isEditing = false;\n  isBusy = false;\n\n  editorOptions = { theme: 'vs-dark', language: 'markdown', automaticLayout: true };\n  editorContent = '';\n\n  constructor(private githubService: GithubService, private projectService: ProjectService) {}\n\n  onMove(direction: Direction) {\n    if (direction === Direction.Up) {\n      this.moveUp.emit();\n    } else if (direction === Direction.Down) {\n      this.moveDown.emit();\n    }\n  }\n\n  startEditing() {\n    this.isEditing = true;\n    this.editorContent = this.card.note;\n  }\n\n  async saveCard(): Promise<void> {\n    this.isBusy = true;\n    await this.githubService.saveCard(this.card.id, this.editorContent);\n    this.isBusy = false;\n  }\n\n  async closeEditor() {\n    this.isBusy = true;\n    await this.projectService.refreshColumnCards(this.column);\n    this.editorContent = '';\n    this.isEditing = false;\n    this.isBusy = false;\n  }\n\n  async saveCardAndCloseEditor() {\n    this.isBusy = true;\n    await this.githubService.saveCard(this.card.id, this.editorContent);\n    await this.projectService.refreshColumnCards(this.column);\n    this.editorContent = '';\n    this.isEditing = false;\n    this.isBusy = false;\n  }\n\n  onDelete() {\n    this.delete.emit();\n  }\n}\n","<div class=\"card\">\n  <div class=\"card__bar\">\n    <ng-container *ngIf=\"!isEditing; else editorButtons\">\n      <div>\n        <mat-icon class=\"card__bar__icon\" (click)=\"onMove(0)\">arrow_upward</mat-icon>\n        <mat-icon class=\"card__bar__icon\" (click)=\"onMove(1)\">arrow_downward</mat-icon>\n      </div>\n      <div>\n        <mat-icon class=\"card__bar__icon\" (click)=\"onDelete()\">delete</mat-icon>\n        <mat-icon class=\"card__bar__icon\" (click)=\"startEditing()\">create</mat-icon>\n      </div>\n    </ng-container>\n    <ng-template #editorButtons>\n      <div>\n        <mat-icon class=\"card__bar__icon icon__save card__bar__icon--big\" (click)=\"saveCard()\"\n          >save</mat-icon\n        >\n      </div>\n      <div>\n        <mat-spinner diameter=\"20\" *ngIf=\"isBusy\"></mat-spinner>\n      </div>\n      <div>\n        <mat-icon\n          class=\"card__bar__icon icon__done card__bar__icon--big\"\n          (click)=\"saveCardAndCloseEditor()\"\n          >done</mat-icon\n        >\n        <mat-icon class=\"card__bar__icon icon__close card__bar__icon--big\" (click)=\"closeEditor()\"\n          >close</mat-icon\n        >\n      </div>\n    </ng-template>\n  </div>\n  <div\n    class=\"card__content\"\n    [innerHTML]=\"card.note | markdownParse | safeHtml\"\n    *ngIf=\"!isEditing; else editor\"\n  ></div>\n  <ng-template #editor>\n    <div class=\"card__editor\">\n      <ngx-monaco-editor\n        [options]=\"editorOptions\"\n        [(ngModel)]=\"editorContent\"\n        style=\"height: 100%;\"\n      ></ngx-monaco-editor>\n    </div>\n  </ng-template>\n</div>\n","import { Component, HostListener } from '@angular/core';\nimport { AuthService } from '../core/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: '../views/login/login.component.html',\n  styleUrls: ['../views/login/login.component.styl'],\n})\nexport class LoginComponent {\n  private keystrokesHistory = '';\n\n  constructor(private authService: AuthService) {}\n\n  @HostListener('document:keydown', ['$event'])\n  onKeyDown(e) {\n    this.keystrokesHistory += e.key;\n\n    if (this.keystrokesHistory === 'dev') {\n      const token = prompt(\n        'Entered dev mode. Now you can enter the access token manually, without using oauth',\n      );\n      if (token) {\n        this.authService.setUser(token);\n      }\n      this.keystrokesHistory = '';\n    }\n  }\n\n  login() {\n    const clientId = '435bb3ee9ba9d983cb60';\n    window.location.href = `https://github.com/login/oauth/authorize?scope=repo%20write%3Aorg%20user&client_id=${clientId}`;\n  }\n}\n","<div class=\"login\">\n  <h1>(pro)jects</h1>\n  <p>A better UI for GitHub Projects 📟</p>\n  <button class=\"login__button\" (click)=\"login()\">\n    Sign in with GitHub <img src=\"/assets/images/GitHub-Mark-Light-32px.png\" />\n  </button>\n</div>\n","import {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport devpun from 'devpun';\nimport { ProjectService } from '../core/services/project.service';\nimport { GithubService } from '../core/services/github.service';\nimport { CardComponent } from './card.component';\n\n// @ts-ignore\nArray.prototype.move = function (from, to) {\n  this.splice(to, 0, this.splice(from, 1)[0]);\n};\n\n@Component({\n  selector: 'app-project-view',\n  templateUrl: '../views/project-view/project-view.component.html',\n  styleUrls: ['../views/project-view/project-view.component.styl'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ProjectViewComponent implements OnInit {\n  @Output() columnSelected = new EventEmitter();\n  selectedColumn: number;\n\n  @ViewChild(CardComponent) firstCard: CardComponent;\n\n  constructor(public projectService: ProjectService, private githubService: GithubService) {}\n\n  ngOnInit(): void {\n    this.projectService.projectChanged.subscribe(() => {\n      this.selectedColumn = undefined;\n    });\n  }\n\n  onColumnClicked(column): void {\n    if (this.selectedColumn === undefined) {\n      this.columnSelected.emit();\n    }\n    this.selectedColumn = column;\n  }\n\n  moveCard(card, pos, oldPos): void {\n    const currentColumn = this.projectService.currentProject.columns[this.selectedColumn];\n    if (pos >= 0 && pos < currentColumn.cards.length) {\n      let positionFormatted;\n      switch (true) {\n        case pos === 0:\n          positionFormatted = 'top';\n          break;\n        case pos === currentColumn.cards.length - 1:\n          positionFormatted = 'bottom';\n          break;\n        default:\n          if (currentColumn.cards[pos - 1].id === card.id) {\n            positionFormatted = `after:${currentColumn.cards[pos].id}`;\n          } else {\n            positionFormatted = `after:${currentColumn.cards[pos - 1].id}`;\n          }\n      }\n\n      this.githubService.moveCard(card.id, positionFormatted);\n      this.projectService.currentProject.columns[this.selectedColumn].cards.move(oldPos, pos);\n    }\n  }\n\n  deleteCard(card, pos): void {\n    if (confirm('Are you sure to delete this card?')) {\n      this.projectService.currentProject.columns[this.selectedColumn].cards.splice(pos, 1);\n      this.githubService.deleteCard(card.id);\n    }\n  }\n\n  addColumn() {\n    const name = prompt('Give title for the column');\n    if (name && name !== '') {\n      this.githubService\n        .createColumn(this.projectService.currentProject.id, name)\n        .then(({ data }) => {\n          this.projectService.refreshProjectColumns().then(() => {\n            const index = this.projectService.currentProject.columns.findIndex(\n              col => col.id === data.id,\n            );\n            this.onColumnClicked(index);\n          });\n        });\n    }\n  }\n\n  addCard() {\n    const joke = devpun.random();\n    this.githubService\n      .createCard(this.projectService.currentProject.columns[this.selectedColumn].id, joke)\n      .then(() => {\n        this.projectService.refreshColumnCards(this.selectedColumn).then(() => {\n          document.querySelector('.cards-view').scroll({ top: 0, behavior: 'smooth' });\n\n          // Ridiculous monkey patch. Don't do this at home, kids\n          setTimeout(() => {\n            this.firstCard.startEditing();\n          }, 0);\n        });\n      });\n  }\n\n  deleteColumn(column, pos) {\n    if (confirm('Are you sure to delete this column?')) {\n      this.projectService.currentProject.columns.splice(pos, 1);\n      this.githubService.deleteColumn(column.id);\n    }\n  }\n}\n","<div class=\"project-view__wrapper\" *ngIf=\"projectService.currentProject; else noProjectBlock\">\n  <div class=\"project-view\">\n    <div class=\"columns-list__wrapper\">\n      <div class=\"columns-list__header\">\n        <span>Column</span>\n        <mat-icon\n          style=\"\n            width: 12px;\n            height: 12px;\n            font-size: 12px;\n            transform: scale(1.25);\n            cursor: pointer;\n          \"\n          (click)=\"addColumn()\"\n          >add</mat-icon\n        >\n      </div>\n      <ul class=\"columns-list\">\n        <li\n          *ngFor=\"let column of this.projectService.currentProject.columns; index as i\"\n          class=\"columns-list__item__wrapper\"\n          [class]=\"\n            selectedColumn !== undefined\n              ? this.projectService.currentProject.columns[selectedColumn].id === column.id\n                ? 'columns-list__item__wrapper--selected'\n                : ''\n              : ''\n          \"\n        >\n          <div (click)=\"onColumnClicked(i)\" class=\"columns-list__item\">\n            {{ column.name }}\n          </div>\n          <span class=\"delete-button\" (click)=\"deleteColumn(column, i)\">delete</span>\n        </li>\n      </ul>\n    </div>\n    <div class=\"cards-view cards-view--switch-view\" *ngIf=\"selectedColumn !== undefined\">\n      <app-card\n        *ngFor=\"\n          let card of this.projectService.currentProject.columns[selectedColumn].cards;\n          index as i\n        \"\n        (moveUp)=\"moveCard(card, i - 1, i)\"\n        (moveDown)=\"moveCard(card, i + 1, i)\"\n        (delete)=\"deleteCard(card, i)\"\n        [card]=\"card\"\n        [column]=\"selectedColumn\"\n      >\n      </app-card>\n      <button class=\"cards-view__add-button\" (click)=\"addCard()\">Add a new card</button>\n    </div>\n  </div>\n</div>\n<ng-template #noProjectBlock>\n  <div class=\"no-project\">\n    No project selected\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { GithubService } from '../core/services/github.service';\nimport { ProjectService } from '../core/services/project.service';\nimport { FavService } from '../core/services/fav.service';\n\n@Component({\n  selector: 'app-projects-list',\n  templateUrl: '../views/projects-list/projects-list.component.html',\n  styleUrls: ['../views/projects-list/projects-list.component.styl'],\n})\nexport class ProjectsListComponent implements OnInit {\n  userProjects: any[] = [];\n\n  constructor(\n    private githubService: GithubService,\n    private projectService: ProjectService,\n    public favService: FavService,\n  ) {}\n\n  ngOnInit(): void {\n    this.getProjects();\n  }\n\n  getProjects(): void {\n    this.githubService.getUserProjects().then(projects => {\n      this.userProjects = projects;\n      this.favService.getFavProjects();\n    });\n  }\n\n  onProjectClicked(projectId): void {\n    this.projectService.setCurrentProject(projectId);\n  }\n\n  favProject(projectId): void {\n    this.favService.addFavProject(this.userProjects.find(proj => proj.id === projectId));\n  }\n\n  removeFavProject(projectId): void {\n    this.favService.removeFavProject(projectId);\n  }\n}\n","<div class=\"projects-list__wrapper\">\n  <h3>Favourite projects</h3>\n  <div class=\"projects-list__empty-caption\" *ngIf=\"!this.favService.favProjects.length\">\n    You haven't added any favourite projects\n  </div>\n  <div class=\"projects-list\">\n    <div class=\"projects-list__item\" *ngFor=\"let project of this.favService.favProjects\">\n      <img src=\"/assets/images/GitHub-Star.svg\" alt=\"star\" class=\"projects-list__item__icon\" /><span\n        (click)=\"onProjectClicked(project.id)\"\n        class=\"projects-list__item__label\"\n      >\n        {{ project.name }}\n      </span>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 12 16\"\n        width=\"12\"\n        height=\"16\"\n        class=\"projects-list__item__action\"\n        (click)=\"removeFavProject(project.id)\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z\"\n        ></path>\n      </svg>\n    </div>\n  </div>\n  <h3>User's projects</h3>\n  <div class=\"projects-list__empty-caption\" *ngIf=\"!userProjects.length\">\n    You haven't created projects associated to your account\n  </div>\n  <div class=\"projects-list\">\n    <div class=\"projects-list__item\" *ngFor=\"let project of userProjects\">\n      <img\n        src=\"/assets/images/GitHub-Project.svg\"\n        alt=\"githubProject\"\n        class=\"projects-list__item__icon\"\n      /><span class=\"projects-list__item__label\" (click)=\"onProjectClicked(project.id)\">\n        {{ project.name }}\n      </span>\n      <svg\n        class=\"projects-list__item__action\"\n        (click)=\"favProject(project.id)\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 14 16\"\n        width=\"14\"\n        height=\"16\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z\"\n        ></path>\n      </svg>\n    </div>\n  </div>\n</div>\n","import { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  public loggedIn = new EventEmitter();\n  public loggedOut = new EventEmitter();\n\n  constructor() {}\n\n  setUser(token): void {\n    window.localStorage.setItem('githubToken', token);\n    this.loggedIn.emit();\n  }\n\n  getUser(): string {\n    return window.localStorage.getItem('githubToken');\n  }\n\n  logoutUser(): void {\n    window.localStorage.removeItem('githubToken');\n    this.loggedOut.emit();\n  }\n\n  isLoggedIn(): boolean {\n    return !!window.localStorage.getItem('githubToken');\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FavService {\n  public favProjects: any[] = [];\n\n  addFavProject(project: any): void {\n    this.getFavProjects();\n    if (!this.favProjects.find(proj => proj.id === project.id)) {\n      this.favProjects.push(project);\n      localStorage.setItem('favProjects', JSON.stringify(this.favProjects));\n    }\n  }\n\n  getFavProjects() {\n    this.favProjects = JSON.parse(localStorage.getItem('favProjects')) || [];\n  }\n\n  removeFavProject(projectId: number): void {\n    this.getFavProjects();\n    const index = this.favProjects.findIndex(proj => proj.id === projectId);\n    if (typeof index === 'number') {\n      this.favProjects.splice(index, 1);\n      localStorage.setItem('favProjects', JSON.stringify(this.favProjects));\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Octokit } from '@octokit/rest';\n\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GithubService {\n  private octokit: Octokit;\n  private allProjects: any[];\n  ghUser: any;\n\n  constructor(private authService: AuthService) {\n    if (authService.isLoggedIn()) {\n      this.octokit = new Octokit({ auth: authService.getUser(), userAgent: '(pro)jects v.0.1.0' });\n    }\n\n    this.authService.loggedIn.subscribe(() => {\n      if (this.authService.isLoggedIn()) {\n        this.octokit = new Octokit({\n          auth: authService.getUser(),\n          userAgent: '(pro)jects v.0.1.0',\n        });\n      }\n    });\n\n    this.authService.loggedOut.subscribe(() => {\n      if (!this.authService.isLoggedIn()) {\n        this.octokit = undefined;\n      }\n    });\n  }\n\n  async checkUser(): Promise<boolean> {\n    if (this.octokit) {\n      if (this.ghUser) {\n        return true;\n      } else {\n        let res;\n        try {\n          res = await this.octokit.users.getAuthenticated();\n        } catch (err) {\n          this.authService.logoutUser();\n          return false;\n        }\n        this.ghUser = res.data;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  async getUserProjects(): Promise<any> {\n    if (await this.checkUser()) {\n      const projects = await this.octokit.projects.listForUser({ username: this.ghUser.login });\n      this.allProjects = projects.data;\n      return projects.data;\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async getProject(projectId: number): Promise<any> {\n    if (await this.checkUser()) {\n      return (\n        this.allProjects.find(data => data.id === projectId) ||\n        (await this.octokit.projects.get({ project_id: projectId })).data\n      );\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async getProjectColumns(projectId: number): Promise<any> {\n    if (await this.checkUser()) {\n      return (\n        await this.octokit.projects.listColumns({\n          project_id: projectId,\n          headers: {\n            'If-None-Match': '',\n          },\n        })\n      ).data;\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async getColumnCards(columnId: number): Promise<any> {\n    if (await this.checkUser()) {\n      return (\n        await this.octokit.projects.listCards({\n          column_id: columnId,\n          headers: {\n            'If-None-Match': '',\n          },\n        })\n      ).data;\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async moveCard(cardId, pos): Promise<void> {\n    if (await this.checkUser()) {\n      await this.octokit.projects.moveCard({ card_id: cardId, position: pos });\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async saveCard(cardId, note): Promise<void> {\n    if (await this.checkUser()) {\n      await this.octokit.projects.updateCard({ card_id: cardId, note });\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async deleteCard(cardId): Promise<void> {\n    if (await this.checkUser()) {\n      await this.octokit.projects.deleteCard({ card_id: cardId });\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async createColumn(projectId, name): Promise<any> {\n    if (await this.checkUser()) {\n      return await this.octokit.projects.createColumn({ project_id: projectId, name });\n    }\n  }\n\n  async createCard(columnId, note): Promise<void> {\n    if (await this.checkUser()) {\n      await this.octokit.projects.createCard({ column_id: columnId, note });\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n\n  async deleteColumn(columnId): Promise<void> {\n    if (await this.checkUser()) {\n      await this.octokit.projects.deleteColumn({ column_id: columnId });\n    } else {\n      throw new Error('User not logged in');\n    }\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { GithubService } from './github.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  currentProject: any;\n  projectChanged: EventEmitter<any> = new EventEmitter();\n\n  constructor(private githubService: GithubService) {}\n\n  async setCurrentProject(projectId: number): Promise<void> {\n    if (!(this.currentProject && this.currentProject.id === projectId)) {\n      this.currentProject = await this.githubService.getProject(projectId);\n      this.currentProject.columns = await this.githubService.getProjectColumns(projectId);\n\n      this.projectChanged.emit(this.currentProject);\n\n      for (const col of this.currentProject.columns) {\n        col.cards = await this.githubService.getColumnCards(col.id);\n      }\n    }\n  }\n\n  async refreshProjectColumns(): Promise<void> {\n    this.currentProject.columns = await this.githubService.getProjectColumns(\n      this.currentProject.id,\n    );\n    for (const col of this.currentProject.columns) {\n      col.cards = await this.githubService.getColumnCards(col.id);\n    }\n  }\n\n  async refreshProjectCards(): Promise<void> {\n    for (const col of this.currentProject.columns) {\n      col.cards = await this.githubService.getColumnCards(col.id);\n    }\n  }\n\n  async refreshColumnCards(col): Promise<void> {\n    this.currentProject.columns[col].cards = await this.githubService.getColumnCards(\n      this.currentProject.columns[col].id,\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport marked from 'marked';\n\n@Pipe({\n  name: 'markdownParse',\n})\nexport class MarkdownParsePipe implements PipeTransform {\n  transform(value: string, ...args: any[]): string {\n    return marked(value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml',\n})\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  transform(html) {\n    return this.sanitizer.bypassSecurityTrustHtml(html);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}